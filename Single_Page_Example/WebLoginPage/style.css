*,
*::after,
*::before {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}

:root {
  --primary-light-hsl: 200, 100%, 91%;
  --primary-hsl: 200, 100%, 50%;
  --primary-dark-hsl: 200, 100%, 6%;
  --success-hsl: 100, 60%, 50%;
  --error-hsl: 0, 60%, 50%;
}

body {
  margin: 0;
}

.fullScreen {
  background-image: url("./picture/plane.jpg");
  background-size: cover;
  height: 100vh;
  width: 100vw;
  display: flex;
  background-position: center;
  align-items: center;
  justify-content: center;
}

.title {
  margin: 0;
  color: white;
  text-align: center;
  font-size: 2rem;
  font-weight: normal;
}

.loginContain {
  --color: hsl(var(--primary-dark-hsl), 0.7);
  background-color: var(--color);
  box-shadow: 0 0 15px 0 var(--color);
  padding: 40px 30px;
  width: 80%;
  max-width: 600px;
  border-radius: 20px;
}

.formulaire {
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-top: 40px;
}

.button {
  display: flex;
  flex-direction: row;
  gap: 10px;
}

.loginButton {
  width: 300px;
  padding: 0.5em 1em;
  font-size: 1.5rem;
  font-weight: lighter;
  color: white;
  background-color: hsl(var(--primary-hsl), 0.25);
  border: 1px solid hsl(var(--primary-hsl), 0.4);
  border-radius: 0.25em;
  outline: none;
  cursor: pointer;
}

.loginButton:hover,
.loginButton:focus {
  background-color: hsl(var(--primary-hsl), 0.4);
}

.input {
  display: flex;
  flex-direction: column;
  gap: 7px;
}

.input label {
  color: white;
  font-weight: lighter;
}

.input input {
  font-size: 1.25rem;
  padding: 0.5em;
  background-color: hsl(var(--primary-light-hsl), 0.3);
  border: none;
  outline: none;
  border-radius: 0.25em;
  color: white;
  font-weight: lighter;
}

.input input:focus {
  box-shadow: 0 0 4px 1px hsl(var(--primary-hsl));
}

.input.success input {
  box-shadow: 0 0 4px 2px hsl(var(--success-hsl));
}

.input.error input {
  box-shadow: 0 0 4px 2px hsl(var(--error-hsl));
}

.input .mess {
  display: none;
  font-size: 0.75rem;
}

.input.error .mess,
.input.success .mess {
  display: block;
}

.input.success .mess {
  color: hsl(var(--success-hsl));
}

.input.error .mess {
  color: hsl(var(--error-hsl));
}
